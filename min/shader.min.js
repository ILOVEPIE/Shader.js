/*
 |   shader.min.js (Closure Compiled shader.js) - A small and compact closure-compiler compatible javascript library for managing shaders.
 |----------------
 |  shader.js, and all compiled versions of shader.js are copyright Patrick Rhodes Martin, 2013.
 |-
 */
window.c={};
window.ShaderPrototype=Object.create(Object,{d:{value:null,writable:!0},a:{value:Object.create(Object),writable:!0},load:{value:function(a,e,d){if("undefined"===typeof window.localStorage||"undefined"===typeof d||0>=d){if("undefined"===typeof window.c[a]){var b=new XMLHttpRequest;b.open("GET",a,!1);b.send();200===b.status&&(this.f=window.c[a]=b.responseText)}else this.f=window.c[a];"undefined"===typeof window.c[e]?(b=new XMLHttpRequest,b.open("GET",e,!1),b.send(),200===b.status&&(this.e=window.c[e]=
b.responseText)):this.e=window.c[e]}else null===window.localStorage.getItem(a)||parseInt(window.localStorage.getItem(a).split("\u0003")[1],16)<window.Date.now()?(b=new XMLHttpRequest,b.open("GET",a,!1),b.send(),200===b.status&&(window.localStorage.setItem(a,b.responseText+"\u0003"+(864E5*d+window.Date.now()).toString(16)),this.f=b.responseText)):this.f=window.localStorage.getItem(a).split("\u0003")[0],null===window.localStorage.getItem(e)||parseInt(window.localStorage.getItem(e).split("\u0003")[1],
16)<window.Date.now()?(b=new XMLHttpRequest,b.open("GET",e,!1),b.send(),200===b.status&&(window.localStorage.setItem(e,b.responseText+"\u0003"+(864E5*d+window.Date.now()).toString(16)),this.e=b.responseText)):this.e=window.localStorage.getItem(e).split("\u0003")[0]}},updateOption:{value:function(a,e){return this.a[a]?(this.a[a].b=e,!0):!1},writable:!1},addOption:{value:function(a,e,d){return null==this.a[a]?(this.a[a]={b:e,j:d},!0):!1},writable:!1},bindShader:{value:function(a){a.useProgram(this.d);
for(var e=this.a.keys(this.a),d=0;d<e.length;d++){var b=e[d],f=a.getUniformLocation(this.d,b);if(f)switch(this.a[b].j){case "1f":a.uniform1f(f,this.a[b].b);break;case "2f":a.uniform2f(f,this.a[b].b[0],this.a[b].b[1]);break;case "3f":a.uniform3f(f,this.a[b].b[0],this.a[b].b[1],this.a[b].b[2]);break;case "4f":a.uniform4f(f,this.a[b].b[0],this.a[b].b[1],this.a[b].b[2],this.a[b].b[3]);break;case "1i":a.uniform1i(f,this.a[b].b);break;case "2i":a.uniform2i(f,this.a[b].b[0],this.a[b].b[1]);break;case "3i":a.uniform3i(f,
this.a[b].b[0],this.a[b].b[1],this.a[b].b[2]);break;case "4i":a.uniform4i(f,this.a[b].b[0],this.a[b].b[1],this.a[b].b[2],this.a[b].b[3]);break;case "1fv":a.uniform1fv(f,this.a[b].b);break;case "2fv":a.uniform2fv(f,this.a[b].b);break;case "3fv":a.uniform3fv(f,this.a[b].b);break;case "4fv":a.uniform4fv(f,this.a[b].b);break;case "1iv":a.uniform1iv(f,this.a[b].b);break;case "2iv":a.uniform2iv(f,this.a[b].b);break;case "3iv":a.uniform3iv(f,this.a[b].b);break;case "4iv":a.uniform4iv(f,this.a[b].b);break;
case "Matrix2fv":a.uniformMatrix2fv(f,!1,this.a[b].b);break;case "Matrix3fv":a.uniformMatrix3fv(f,!1,this.a[b].b);break;case "Matrix4fv":a.uniformMatrix4fv(f,!1,this.a[b].b)}}},writable:!1},getShader:{value:function(){return this.d},writable:!1},compile:{value:function(a,e){var d;this.d=d=a.createProgram();this.i=this.g(a,this.f,a.VERTEX_SHADER);this.h=this.g(a,this.e,a.FRAGMENT_SHADER);a.attachShader(d,this.i);a.attachShader(d,this.h);a.linkProgram(d);a.getProgramParameter(d,a.LINK_STATUS)||(a.deleteProgram(d),
a.deleteShader(this.i),a.deleteShader(this.h),e())},writable:!1},g:{value:function(a,e,d){var b;b="#ifdef GL_ES\nprecision highp float;\n#endif\n";d=a.createShader(d);a.shaderSource(d,b+e);a.compileShader(d);return a.getShaderParameter(d,a.COMPILE_STATUS)?d:(console.debug(a.getShaderInfoLog(d)),a.deleteShader(d),null)}}});